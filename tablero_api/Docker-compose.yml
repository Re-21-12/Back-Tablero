version: '3.9'

services:
  frontend:
    image: revic2112/front-tablero-nginx:latest
    container_name: frontend
    restart: always
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - server

  backend:
    image: revic2112/back-tablero-desarrolloweb:tagname
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - DOTNET_RUNNING_IN_CONTAINER=${DOTNET_RUNNING_IN_CONTAINER}
      - DOTNET_USE_POLLING_FILE_WATCHER=${DOTNET_USE_POLLING_FILE_WATCHER}
      - ConnectionStrings__Default=Server=sqlserver,1433;Database=${DB_NAME};User Id=appuser;Password=${APP_USER_PASSWORD};TrustServerCertificate=true;
    depends_on:
      - sqlserver
      - keycloak-config
    networks:
      - server

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - server
    deploy:
      resources:
        limits:
          memory: 4g

  sql-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - sqlserver
    volumes:
      - ./script:/scripts
    entrypoint: /bin/bash -c "sleep 15; /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P ${SA_PASSWORD} -i /scripts/init.sql"
    networks:
      - server

  postgres_keycloak:
    image: postgres:15
    container_name: postgres_keycloak
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - server
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=${POSTGRES_PASSWORD} psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1;' >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 10

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    restart: always
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres_keycloak
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      postgres_keycloak:
        condition: service_healthy
    networks:
      - server
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/realms/master || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s  

  admin-service:
    image: revic2112/admin-service-desarrolloweb:latest
    ports:
      - "3000:3000"
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=master
      - KEYCLOAK_ADMIN_CLIENT_ID=${CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${CLIENT_SECRET}
      - KEYCLOAK_ADMIN_USERNAME=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      - keycloak-config
    networks:
      - server

volumes:
  sql_data:
  keycloak_data:

networks:
  server:
