// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tablero_api.Data;

#nullable disable

namespace tablero_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251007175748_Anotaciones_Faltas_Fixed")]
    partial class Anotaciones_Faltas_Fixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tablero_api.Models.Anotacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("id_cuarto")
                        .HasColumnType("int");

                    b.Property<int>("id_jugador")
                        .HasColumnType("int");

                    b.Property<int>("id_partido")
                        .HasColumnType("int");

                    b.Property<int>("total_anotaciones")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_cuarto");

                    b.HasIndex("id_jugador");

                    b.HasIndex("id_partido");

                    b.ToTable("Anotaciones");
                });

            modelBuilder.Entity("tablero_api.Models.Cuarto", b =>
                {
                    b.Property<int>("id_Cuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Cuarto"));

                    b.Property<int>("No_Cuarto")
                        .HasColumnType("int");

                    b.Property<int>("Total_Faltas")
                        .HasColumnType("int");

                    b.Property<int>("Total_Punteo")
                        .HasColumnType("int");

                    b.Property<string>("duenio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_Equipo")
                        .HasColumnType("int");

                    b.Property<int>("id_Partido")
                        .HasColumnType("int");

                    b.HasKey("id_Cuarto");

                    b.HasIndex("id_Equipo");

                    b.HasIndex("id_Partido");

                    b.ToTable("Cuartos");
                });

            modelBuilder.Entity("tablero_api.Models.Equipo", b =>
                {
                    b.Property<int>("id_Equipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Equipo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_Localidad")
                        .HasColumnType("int");

                    b.Property<string>("url_imagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Equipo");

                    b.HasIndex("id_Localidad");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("tablero_api.Models.Falta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("id_cuarto")
                        .HasColumnType("int");

                    b.Property<int>("id_jugador")
                        .HasColumnType("int");

                    b.Property<int>("id_partido")
                        .HasColumnType("int");

                    b.Property<int>("total_falta")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_cuarto");

                    b.HasIndex("id_jugador");

                    b.HasIndex("id_partido");

                    b.ToTable("Faltas");
                });

            modelBuilder.Entity("tablero_api.Models.Imagen", b =>
                {
                    b.Property<int>("id_Imagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Imagen"));

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Imagen");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("tablero_api.Models.Jugador", b =>
                {
                    b.Property<int>("id_Jugador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Jugador"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<float>("Estatura")
                        .HasColumnType("real");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero_jugador")
                        .HasColumnType("int");

                    b.Property<string>("Posicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("id_Equipo")
                        .HasColumnType("int");

                    b.HasKey("id_Jugador");

                    b.HasIndex("id_Equipo");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("tablero_api.Models.Localidad", b =>
                {
                    b.Property<int>("id_Localidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Localidad"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Localidad");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("tablero_api.Models.Partido", b =>
                {
                    b.Property<int>("id_Partido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Partido"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_Local")
                        .HasColumnType("int");

                    b.Property<int>("id_Localidad")
                        .HasColumnType("int");

                    b.Property<int>("id_Visitante")
                        .HasColumnType("int");

                    b.HasKey("id_Partido");

                    b.HasIndex("id_Local");

                    b.HasIndex("id_Localidad");

                    b.HasIndex("id_Visitante");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("tablero_api.Models.Permiso", b =>
                {
                    b.Property<int>("Id_Permiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Permiso"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("Id_Rol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id_Permiso");

                    b.HasIndex("Id_Rol");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("tablero_api.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("tablero_api.Models.Rol", b =>
                {
                    b.Property<int>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Rol"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id_Rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("tablero_api.Models.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Usuario"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("Id_Rol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id_Usuario");

                    b.HasIndex("Id_Rol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("tablero_api.Models.Anotacion", b =>
                {
                    b.HasOne("tablero_api.Models.Cuarto", "cuarto")
                        .WithMany()
                        .HasForeignKey("id_cuarto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablero_api.Models.Jugador", "jugador")
                        .WithMany()
                        .HasForeignKey("id_jugador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablero_api.Models.Partido", "partido")
                        .WithMany()
                        .HasForeignKey("id_partido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cuarto");

                    b.Navigation("jugador");

                    b.Navigation("partido");
                });

            modelBuilder.Entity("tablero_api.Models.Cuarto", b =>
                {
                    b.HasOne("tablero_api.Models.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("id_Equipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tablero_api.Models.Partido", "Partido")
                        .WithMany()
                        .HasForeignKey("id_Partido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("tablero_api.Models.Equipo", b =>
                {
                    b.HasOne("tablero_api.Models.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("id_Localidad")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("tablero_api.Models.Falta", b =>
                {
                    b.HasOne("tablero_api.Models.Cuarto", "cuarto")
                        .WithMany()
                        .HasForeignKey("id_cuarto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablero_api.Models.Jugador", "jugador")
                        .WithMany()
                        .HasForeignKey("id_jugador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablero_api.Models.Partido", "partido")
                        .WithMany()
                        .HasForeignKey("id_partido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cuarto");

                    b.Navigation("jugador");

                    b.Navigation("partido");
                });

            modelBuilder.Entity("tablero_api.Models.Jugador", b =>
                {
                    b.HasOne("tablero_api.Models.Equipo", "Equipo")
                        .WithMany("Jugadores")
                        .HasForeignKey("id_Equipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("tablero_api.Models.Partido", b =>
                {
                    b.HasOne("tablero_api.Models.Equipo", "Local")
                        .WithMany()
                        .HasForeignKey("id_Local")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tablero_api.Models.Localidad", "localidad")
                        .WithMany()
                        .HasForeignKey("id_Localidad")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("tablero_api.Models.Equipo", "Visitante")
                        .WithMany()
                        .HasForeignKey("id_Visitante")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("Visitante");

                    b.Navigation("localidad");
                });

            modelBuilder.Entity("tablero_api.Models.Permiso", b =>
                {
                    b.HasOne("tablero_api.Models.Rol", "Rol")
                        .WithMany("Permisos")
                        .HasForeignKey("Id_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("tablero_api.Models.RefreshToken", b =>
                {
                    b.HasOne("tablero_api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("tablero_api.Models.Usuario", b =>
                {
                    b.HasOne("tablero_api.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("Id_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("tablero_api.Models.Equipo", b =>
                {
                    b.Navigation("Jugadores");
                });

            modelBuilder.Entity("tablero_api.Models.Rol", b =>
                {
                    b.Navigation("Permisos");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
